/* _____________ 두개의 값 비교하기(비교연산자) _____________ */

/*
***** 적용 *****
- 두 개의 값을 비교하고 싶을 때
- 변수의 값이 동일한지 확인하고 싶을 때

# Syntax
- A == B : A, B의 값이 같은가
- A === B : A, B의 값과 데이터 타입이 같은가
- A != B : A, B의 값이 다른가
- A !== B : A, B의 값과 데이터 타입이 다른가
- A < B : A가 B보다 작은가
- A <= B : A가 B보다 작거나 같은가
- A > B : A가 B보다 큰가
- A >= B : A가 B보다 크거나 같은가

두 데이터의 값을 비교하는 비교 연산자는 위와 같으며,
반환값은 모두 true , false이다.
*/

console.log("사과" == "사과"); // true
console.log(10 < 30); // true
console.log(20 >= 30); // false

// 배열과 객체 등 타입 비교는 같은 곳을 참조하고 있는 경우에만 참이 반환됨.

const array1 = [1, 2, 3];
const array2 = [1, 2, 3];
console.log((array1 = array2)); // false 참조하는 곳이 다름.

const array3 = [1, 2, 3];
const array4 = array3;
console.log(array3 == array4); // true 참조하는 곳이 같음.

/*
***** == 와 ===의 차이점 *****
- 데이터는 숫자와 문자열 등의 타입이 있음.
- ==를 사용한 비교는 두 비교 대상이 다른 타입이라도 동일한 것으로 간주하여 비교함.
*/

console.log(10 == "10");
// 결과 : true (두 데이터 모두 같은 데이터 타입으로 간주함.)

/*
- ===를 사용한 비교는 두 데이터의 타입이 다르면 다른 데이터로 간주함.
- '!='나 '!=='의 관계와 같음.
*/

console.log(10 === "10"); // false (다른 타입으로 간주)
console.lo(20 != "20"); // false (두 데이터 모두 같은 타입으로 간주)
console.log(20 !== "20"); // true (20과 '20'은 다른 타입으로 간주)
